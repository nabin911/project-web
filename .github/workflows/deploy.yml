name: Deploy Multiple Projects to GitHub Pages

# Trigger the workflow on pushes to the main branch
on:
  push:
    branches:
      - main
    paths:
      - 'project1 form/**'
      - 'project2 movie sit/**'
      - 'project3 Custom Video Player/**'
      - '.github/workflows/deploy.yml'

# Job definitions
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # We need at least 2 commits to compare changes
      
      # Step 2: Setup Node.js environment (used for building projects if needed)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Choose an appropriate Node.js version
          cache: 'npm'        # Cache npm dependencies for faster builds
      
      # Step 3: Detect changes in project directories
      - name: Detect changed files
        id: changes
        run: |
          # For pushes, compare with the previous commit
          if [[ $(git diff --name-only HEAD^ HEAD | grep -c "^project1 form/") -gt 0 ]]; then
            echo "project1_changed=true" >> $GITHUB_OUTPUT
          else
            echo "project1_changed=false" >> $GITHUB_OUTPUT
          fi
          
          if [[ $(git diff --name-only HEAD^ HEAD | grep -c "^project2 movie sit/") -gt 0 ]]; then
            echo "project2_changed=true" >> $GITHUB_OUTPUT
          else
            echo "project2_changed=false" >> $GITHUB_OUTPUT
          fi
          
          if [[ $(git diff --name-only HEAD^ HEAD | grep -c "^project3 Custom Video Player/") -gt 0 ]]; then
            echo "project3_changed=true" >> $GITHUB_OUTPUT
          else
            echo "project3_changed=false" >> $GITHUB_OUTPUT
          fi
      
      # Step 4: Build Project 1 (Form) if changes detected
      - name: Build project1 (Form)
        if: steps.changes.outputs.project1_changed == 'true'
        working-directory: project1 form
        run: |
          # If you need to build the project, uncomment these lines:
          # npm ci
          # npm run build
          echo "Project 1 ready for deployment"
          
      # Step 5: Build Project 3 (Custom Video Player) if changes detected
      - name: Build project3 (Custom Video Player)
        if: steps.changes.outputs.project3_changed == 'true'
        working-directory: project3 Custom Video Player
        run: |
          # If you need to build the project, uncomment these lines:
          # npm ci
          # npm run build
          echo "Project 3 ready for deployment"
      
      # Step 6: Create temporary directory for deployment
      - name: Prepare deployment directory
        run: |
          mkdir -p deploy-temp
      
      # Step 7: Copy Project 1 files
      - name: Copy project1 files
        if: steps.changes.outputs.project1_changed == 'true'
        run: |
          mkdir -p deploy-temp/project1
          cp -r "project1 form"/* deploy-temp/project1/
      
      # Step 8: Copy Project 2 files
      - name: Copy project2 files
        if: steps.changes.outputs.project2_changed == 'true'
        run: |
          mkdir -p deploy-temp/project2
          cp -r "project2 movie sit"/* deploy-temp/project2/
      
      # Step 9: Copy Project 3 files
      - name: Copy project3 files
        if: steps.changes.outputs.project3_changed == 'true'
        run: |
          mkdir -p deploy-temp/project3
          cp -r "project3 Custom Video Player"/* deploy-temp/project3/
      
      # Step 10: Check if any project was deployed
      - name: Check if any project was deployed
        id: check_deploy
        run: |
          if [ -d "deploy-temp" ] && [ "$(ls -A deploy-temp)" ]; then
            echo "has_content=true" >> $GITHUB_OUTPUT
          else
            echo "has_content=false" >> $GITHUB_OUTPUT
          fi
      
      # Step 11: Deploy to GitHub Pages only if there's content to deploy
      - name: Deploy to GitHub Pages
        if: steps.check_deploy.outputs.has_content == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy-temp
          destination_dir: .
          keep_files: true
          commit_message: "Deploy projects to GitHub Pages"
