name: Deploy Multiple Projects to GitHub Pages

# Trigger the workflow on pushes to the main branch
on:
  push:
    branches:
      - main
    paths:
      - 'project1/**'
      - 'project2/**'
      - 'project3/**'
      - '.github/workflows/deploy.yml'

# Job definitions
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the repository with full history (needed for detecting changes)
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetches all history for detecting file changes
      
      # Step 2: Setup Node.js environment (used for building React and Vue projects)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Choose an appropriate Node.js version
          cache: 'npm'        # Cache npm dependencies for faster builds
      
      # Step 3: Detect changes in project directories
      - name: Detect changed files
        id: changes
        run: |
          # Check if files in project1 directory were changed
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^project1/"; then
            echo "project1_changed=true" >> $GITHUB_OUTPUT
          else
            echo "project1_changed=false" >> $GITHUB_OUTPUT
          fi
          
          # Check if files in project2 directory were changed
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^project2/"; then
            echo "project2_changed=true" >> $GITHUB_OUTPUT
          else
            echo "project2_changed=false" >> $GITHUB_OUTPUT
          fi
          
          # Check if files in project3 directory were changed
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^project3/"; then
            echo "project3_changed=true" >> $GITHUB_OUTPUT
          else
            echo "project3_changed=false" >> $GITHUB_OUTPUT
          fi
      
      # Step 4: Build Project 1 (React) if changes detected
      - name: Build project1 (React)
        if: steps.changes.outputs.project1_changed == 'true'
        working-directory: project1
        run: |
          npm ci
          npm run build
          
      # Step 5: Build Project 3 (Vue) if changes detected
      - name: Build project3 (Vue)
        if: steps.changes.outputs.project3_changed == 'true'
        working-directory: project3
        run: |
          npm ci
          npm run build
      
      # Step 6: Create temporary directory for deployment
      - name: Prepare deployment directory
        run: |
          mkdir -p deploy-temp
      
      # Step 7: Copy Project 1 build output (if it was built or already exists)
      - name: Copy project1 build output
        if: steps.changes.outputs.project1_changed == 'true' || hashFiles('project1/build/**') != ''
        run: |
          mkdir -p deploy-temp/project1
          if [ -d "project1/build" ]; then
            cp -r project1/build/* deploy-temp/project1/
          fi
      
      # Step 8: Copy Project 2 files (static HTML site, no build required)
      - name: Copy project2 files
        if: steps.changes.outputs.project2_changed == 'true' || hashFiles('project2/**') != ''
        run: |
          mkdir -p deploy-temp/project2
          cp -r project2/* deploy-temp/project2/
      
      # Step 9: Copy Project 3 build output (if it was built or already exists)
      - name: Copy project3 build output
        if: steps.changes.outputs.project3_changed == 'true' || hashFiles('project3/dist/**') != ''
        run: |
          mkdir -p deploy-temp/project3
          if [ -d "project3/dist" ]; then
            cp -r project3/dist/* deploy-temp/project3/
          fi
      
      # Step 10: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # Automatically provided by GitHub
          publish_dir: ./deploy-temp  # Directory to publish
          destination_dir: .  # Deploy to root of gh-pages branch
          keep_files: true  # Don't delete files not affected by this deployment
          
          # Optional: Customize commit message
          commit_message: "Deploy projects to GitHub Pages"