name: Deploy Multiple Projects to GitHub Pages

# Trigger the workflow on pushes to the main branch
on:
  push:
    branches:
      - main
    paths:
      - 'project1 form/**'
      - 'project2 movie sit/**'
      - 'project3 Custom Video Player/**'
      - '.github/workflows/deploy.yml'

# Set permissions for GitHub Pages deployment
permissions:
  contents: write
  pages: write
  id-token: write

# Concurrency group to ensure only one deployment runs at a time
concurrency:
  group: "pages"
  cancel-in-progress: false

# Job definitions
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper comparison
      
      # Step 2: Detect changes in project directories
      - name: Detect changed files
        id: changes
        run: |
          echo "Creating all projects by default for first deployment"
          echo "project1_changed=true" >> $GITHUB_OUTPUT
          echo "project2_changed=true" >> $GITHUB_OUTPUT
          echo "project3_changed=true" >> $GITHUB_OUTPUT
      
      # Step 3: Create temporary directory for deployment
      - name: Prepare deployment directory
        run: |
          mkdir -p deploy-temp
      
      # Step 4: Copy Project 1 files
      - name: Copy project1 files
        if: steps.changes.outputs.project1_changed == 'true'
        run: |
          mkdir -p deploy-temp/project1-form
          cp -r "project1 form"/* deploy-temp/project1-form/ || echo "No files to copy for project1"
      
      # Step 5: Copy Project 2 files
      - name: Copy project2 files
        if: steps.changes.outputs.project2_changed == 'true'
        run: |
          mkdir -p deploy-temp/project2-movie
          cp -r "project2 movie sit"/* deploy-temp/project2-movie/ || echo "No files to copy for project2"
      
      # Step 6: Copy Project 3 files
      - name: Copy project3 files
        if: steps.changes.outputs.project3_changed == 'true'
        run: |
          mkdir -p deploy-temp/project3-video
          cp -r "project3 Custom Video Player"/* deploy-temp/project3-video/ || echo "No files to copy for project3"
      
      # Step 7: Create a main index page
      - name: Create main index page
        run: |
          cat > deploy-temp/index.html << 'EOL'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Project Portfolio</title>
            <style>
              body {
                font-family: 'Arial', sans-serif;
                line-height: 1.6;
                max-width: 800px;
                margin: 0 auto;
                padding: 20px;
                background-color: #f5f5f5;
                color: #333;
              }
              h1 {
                color: #2c3e50;
                border-bottom: 2px solid #3498db;
                padding-bottom: 10px;
              }
              .project-grid {
                display: grid;
                grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
                gap: 20px;
                margin-top: 30px;
              }
              .project-card {
                background-color: white;
                border-radius: 8px;
                overflow: hidden;
                box-shadow: 0 4px 8px rgba(0,0,0,0.1);
                transition: transform 0.3s ease, box-shadow 0.3s ease;
              }
              .project-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 6px 12px rgba(0,0,0,0.15);
              }
              .project-card a {
                display: block;
                padding: 20px;
                text-decoration: none;
                color: #2c3e50;
                font-weight: bold;
              }
              .project-card p {
                padding: 0 20px 20px;
                margin-top: -10px;
                color: #7f8c8d;
              }
              footer {
                margin-top: 50px;
                text-align: center;
                color: #7f8c8d;
                font-size: 0.9em;
              }
            </style>
          </head>
          <body>
            <h1>My Web Projects</h1>
            <p>Welcome to my portfolio of web projects. Click on any project below to view it.</p>
            
            <div class="project-grid">
              <div class="project-card">
                <a href="project1-form/">Project 1: Form</a>
                <p>An interactive form built with HTML, CSS, and JavaScript.</p>
              </div>
              
              <div class="project-card">
                <a href="project2-movie/">Project 2: Movie Seat Booking</a>
                <p>A movie seat booking application with interactive seat selection.</p>
              </div>
              
              <div class="project-card">
                <a href="project3-video/">Project 3: Custom Video Player</a>
                <p>A custom HTML5 video player with custom controls.</p>
              </div>
            </div>
            
            <footer>
              <p>&copy; 2023 Created by Nabin911</p>
            </footer>
          </body>
          </html>
          EOL
      
      # Step 8: Check if any project was deployed
      - name: Check if any project was deployed
        id: check_deploy
        run: |
          if [ -d "deploy-temp" ] && [ "$(ls -A deploy-temp)" ]; then
            echo "has_content=true" >> $GITHUB_OUTPUT
          else
            echo "has_content=false" >> $GITHUB_OUTPUT
          fi
      
      # Step 9: Setup Pages
      - name: Setup Pages
        if: steps.check_deploy.outputs.has_content == 'true'
        uses: actions/configure-pages@v4
        
      # Step 10: Upload artifact - Using v4 instead of deprecated v3
      - name: Upload artifact
        if: steps.check_deploy.outputs.has_content == 'true'
        uses: actions/upload-pages-artifact@v4
        with:
          path: './deploy-temp'
          
      # Step 11: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        if: steps.check_deploy.outputs.has_content == 'true'
        id: deployment
        uses: actions/deploy-pages@v4
